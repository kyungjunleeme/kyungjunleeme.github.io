1강
상속안함
관리자
System만 권한 나둠


chmod 400 권한 설정

sudo apt-get update
sudo apt-get install vim
sudo apt-get install python3-pip
sudo apt-get install pip3 notebook
python3

from notebook.auth import passwd
passwd()

shq1 값을 복사하고

exit()


yes

sha1:a3f748eff68d:426fce705a839877479c40ad4dc6de0c65609951

jupyter notebook --generate-config

ubuntu@ip-172-31-32-181:~$ jupyter notebook --generate-config
Writing default config to: /home/ubuntu/.jupyter/jupyter_notebook_config.py

보안 


사설 ip 입력


c = get_config()                                                                                                                     c.NotebookApp.password = u'sha1:a3f748eff68d:426fce705a839877479c40ad4dc6de0c65609951'                                 c.NotebookApp.ip = '172.31.32.181'                                                                                       c.NotebookApp.notebook_dir = '/'                                                                                                                                                             ~                                          
루트권한 실행
sudo jupyter-notebook --allow-root

http://172.31.32.181:8888/

보안 그룹 으로 가서

인바운드에 포트 8888 0.0.0.0/0

bg

disown -h (소유권 포기)

sudo netstat -nap | grep 8888

sudo kill -9 4978

개인키, 공개키

sudo openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout "cert.key" -out "cert.pem" -batch



https://oops.org/?t=lecture&sb=sslwrap&n=2

https://www.youtube.com/watch?v=LoYpXoBJPMc&list=PLRx0vPvlEmdChjc6N3JnLaX-Gihh5pHcx&index=2 

오류 떠서 막힘 ,나동빈님에게 질문 남김



https://statkclee.github.io/bigdata/bigdata-pyspark-prerequisite.html#1_pyspark_ide_1


sudo vi /etc/systemd/system/jupyter.service

sudo systemctl daemon-reload
sudo systemctl enable jupyter
sudo systemctl start jupyter
sudo systemctl status jupyter
sudo systemctl restart jupyter

-------------------------------------------------------

docker ps -a
올라간 컨테이너 모두 삭제

docker rm -f `docker ps -a -q` (숫자 1 옆에 기호 입력할 것)
docker ps -a

# Avoiding user interaction with tzdata
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get install -y software-properties-common
RUN apt-repository ppa:ondrej/php # For Installing PHP 5.6
RUN apt-get update
RUN apt-get install -y php5.6

docker build -t example .
사용되지 않는 이미지
docker rmi -f IMAGE ID

docker run -p 80:80-v /home/ubuntu/example/html:/var/www/html example

root@ip-172-31-34-183:~/example# docker run -p 80:80-v /home/ubuntu/example/html:/var/www/html example
AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppressthis message

docker 컨테이너 삭제
docker 이미지 삭제

docker run -d -p 9876:3306 -e MYSQL_ROOT_PASSWORD=password mysql:5.6

docker exec -it <container id> 

docker exec -it db9bb3330aa2 /bin/bash

mysql -u root -p

exit
exit

docker inspect <conatiner id>

# EC2 인스턴ㄴ스에 mysql 설치
apt install mysql-client-core-5.7


 mysql -u root -p --host 127.0.0.1 --port 9876

mysql> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> CREATE USER 'test'@'%' IDENTIFIED BY 'password';
Query OK, 0 rows affected (0.00 sec)

mysql> GRANT ALL PRIVILEGES ON *.* TO 'test'@'%';
Query OK, 0 rows affected (0.00 sec)

MYSQL_ROOT_PASSWORD=PASSWORD

            "SandboxKey": "/var/run/docker/netns/30dde85bf328",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "0278e2ca3fcc33223027806b78e9c70206729caac2739531c3b2df99486d09e4",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2"

mysql -u root -p --host 172.17.0.2 --port 3306

# Connect PHP & MYSQL
RUN apt-get install -y php5.6-mysql


docker run -p 80:80 -v /home/ubuntu/example/html:/var/www/html example

<?php
    $conn = mysqli_connect(
        '13.125.248.119',
        'test',
        'password',
        'TEST',
        '9876'
    );
    if(mysqli_connect_errno()) {
        echo "Faild to connect to MySQL: ".mysqli_connect_error();
    }
    $sql = "SELECT VERSION()";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_array($result);
    print_r($row["VERSION()"]);
?>


-----------------------------------------------------------
RDS 생성

파라미터 그룹 생성 후
편집 눌러서
파라미터 값 설정 utf-8 / utf-8 general_ci


---------------------------------------------------------------------------------------------------
[9강]
도커(Docker) 활용 및 배포 자동화 실전 초급 ⑨ DockerHub와 GitHub 연동하기

docker images

일반적으로 container부터 먼저 삭제
docker rm -f `docker ps -a -q`

docker rmi -f `docker images`


cd /home/ubuntu
ls

cd Docker-Practice
ls
mkdir Project
mv index.ph ./Project/index.php
ls
cd Project
ls
cd ..
git add .
git commit -m "Change index.php path"
git push

root@ip-172-31-34-183:~/Docker-Practice# git push
Username for 'https://github.com': kyungjunleeme
Password for 'https://kyungjunleeme@github.com':
To https://github.com/kyungjunleeme/Docker-Practice.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/kyungjunleeme/Docker-Practice.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.


>>> read.me 파일 수정해서 생긴 에러 
>>> 이 경우 pull을 먼저 해주면 됨


도커(Docker) 활용 및 배포 자동화 실전 초급 ⑩ Jenkins를 이용해 Docker 프로젝트 빌드해보기

docker pull jenkins
docker run -d -p 8080:8080 -v /home/jenkins:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -u root jenkins
docker logs (젠킨스_ 컨테이너 아이디)
log에서 jenkins 비밀번호 확인

(ipv4):8080
> 해당 비밀번호 입력





